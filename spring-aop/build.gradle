/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'mingchi.li' at '11/09/17 2:45 PM' with Gradle 2.12
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.12/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.6.RELEASE")
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
}

jar {
    baseName = 'spring-aop'
    version =  '0.1.0'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

// In this section you declare the dependencies for your production and test code
dependencies {
    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
        }
    compile('org.springframework.boot:spring-boot-starter-aop')

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
